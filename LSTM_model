#LSTM model from article doi.org-10.5194-wes-2023-104
##############################################################

# design network
model = Sequential()
model.add(LSTM(UNITS, return_sequences=True, input_shape=(train_X.shape[1], 4)))
model.add(Dense(1))
model.compile(loss='mae', optimizer='adam')
# fit network
history = model.fit(train_X, train_y, epochs=EPOCHS, batch_size=BATCH_SIZE, validation_data=(test_X, test_y), verbose=2, shuffle=False)
# plot history
plt.plot(history.history['loss'], label='train')
plt.plot(history.history['val_loss'], label='test')
plt.legend()
plt.show()

# make a prediction
yhat = model.predict(test_X)
